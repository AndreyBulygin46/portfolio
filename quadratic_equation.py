'''Условие задачи
Все мы в школе решали квадратное уравнение: ax ** 2 + bx + c = 0.

Необходимо автоматизировать этот процесс и написать функцию для нахождения корней уравнения.
Также реализуйте вспомогательную функцию для нахождения дискриминанта, основываясь на его свойствах:

Если дискриминант < 0, то вывести «корней нет».
Если дискриминант = 0, то вывести один корень.
Если дискриминант > 0, то вывести два различных корня.
Необходимо вывести решение для следующих коэффициентов:

a = 1, b = 8, c = 15.
a = 1, b = -13, c = 12.
a = -4, b = 28, c = -49.
a = 1, b = 1, c = 1.
На примере можно вспомнить, как работает дискриминант.
Дискриминант позволяет определить, сколько в уравнении корней.

Решим уравнение: 3x ** 2 - 4 * x + 2 = 0.
Сначала определим коэффициенты: a = 3, b = -4, c = 2.
Рассчитаем дискриминант: D = b ** 2 - 4 * a * c = (-4) ** 2 - 4 * 3 * 2 = -8.
Так как дискриминант < 0, значит у уравнения корней нет.
В результате корректного выполнения задания будет выведен следующий результат:

1
2
3
4
-3.0 -5.0
12.0 1.0
3.5
корней нет'''

a,b,c = 1,1,1


def discriminant(a, b, c):
    """
    функция для нахождения дискриминанта
    """
    return b ** 2 - 4 * a * c


def solution(a, b, c):
    """
    функция для нахождения корней уравнения
    """
    d = discriminant(a, b, c)
    x1 = (-b + d ** 0.5)/(2 * a)
    x2 = (-b - d ** 0.5) / (2 * a)

    if d < 0:
        print('корней нет')
    elif d == 0:
        print(x1)
    else:
        print(x1, x2)


if __name__ == '__main__':
    solution(1, 8, 15) 
    solution(1, -13, 12)
    solution(-4, 28, -49)
    solution(1, 1, 1)
